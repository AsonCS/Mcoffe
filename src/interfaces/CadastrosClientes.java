/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import static ferramentas.Conexao.*;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author AndersonCS
 */
public class CadastrosClientes extends javax.swing.JFrame {
    private ResultSet cr;
    private int id = 0;
    
    /**
     * Creates new form CadastrosClientes
     */
    public CadastrosClientes() {
        initComponents();
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        txtNomeCliente = new javax.swing.JTextField();
        txtCPF = new javax.swing.JTextField();
        txtCEP = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnGravar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtNomeCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtCPF.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtCEP.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nome do Cliente");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CPF");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CEP");

        btnGravar.setText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnApagar.setText("Apagar");
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAtualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGravar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApagar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVoltar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisar)
                    .addComponent(btnGravar)
                    .addComponent(btnVoltar)
                    .addComponent(btnAtualizar)
                    .addComponent(btnApagar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        txtCEP.setText("");
        if(txtNomeCliente.getText().isEmpty() && txtCPF.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Preencha nome ou cpf!");
            id = 0;
        }else{
            try {
                if(!(txtCPF.getText().isEmpty())){
                    cr = cs.executeQuery("select * from cliente where cpf like "+txtCPF.getText()+";");
                    if(cr.first()){
                        txtNomeCliente.setText(cr.getString("nome"));
                        txtCEP.setText(cr.getString("cep"));
                        txtCPF.setText(cr.getString("cpf"));
                        id = cr.getInt("id");
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "CPF não encontrado!");
                        txtNomeCliente.setText("");
                        txtCPF.setText("");
                        id = 0;
                    }
                }else{
                    String a = '%'+txtNomeCliente.getText()+'%';
                    cr = cs.executeQuery("select * from cliente where nome like '"+a+"';");
                    if(cr.first()){
                        txtNomeCliente.setText(cr.getString("nome"));
                        txtCEP.setText(cr.getString("cep"));
                        txtCPF.setText(cr.getString("cpf"));
                        id = cr.getInt("id");
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Nome não encontrado!");
                        txtNomeCliente.setText("");                        
                        txtCPF.setText("");
                        id = 0;
                    }
                }
            } catch (Exception e) {}
        }        
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        // TODO add your handling code here:
        if(txtNomeCliente.getText().isEmpty() || !(txtCEP.getText().matches("[0-9]{1,8}")) || !(txtCPF.getText().matches("[0-9]{1,11}"))){
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos corretamente!\n\"CPF e CEP só números\"");            
        }else{
            if(0 == JOptionPane.showConfirmDialog(rootPane, "Gravar informações?")){
                try{
                    cr = cs.executeQuery("select * from cliente where cpf like '"+txtCPF.getText()+"' ;");
                    if(cr.first()){
                        JOptionPane.showMessageDialog(rootPane, "CPF já existe!");
                    }else{
                        String sql = "insert into cliente (nome,cpf,cep,cpre) values ('%s','%s','%s','0');";
                        cs.executeUpdate(String.format(sql, txtNomeCliente.getText(), txtCPF.getText(), txtCEP.getText()));
                        JOptionPane.showMessageDialog(rootPane, "Salvo com sucesso!");
                    }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane, "Erro ao salvar!\n");
                }
            }
        }
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:
        if(txtNomeCliente.getText().isEmpty() || !(txtCEP.getText().matches("[0-9]{1,8}")) || !(txtCPF.getText().matches("[0-9]{1,11}"))){
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos corretamente!\n\"CPF e CEP só números\"");            
        }else{
            if(JOptionPane.showConfirmDialog(rootPane, "Atualizar informações?") == 0){
                if(id != 0){
                    try{
                        String sql = "update mcoffe.cliente set %s = '%s', %s = '%s' where id = '%s';";
                        cs.executeUpdate(String.format(sql, "nome", txtNomeCliente.getText(), "cep", txtCEP.getText(), id));
                        JOptionPane.showMessageDialog(rootPane, "Atualizado com sucesso.");
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane, "Erro ao atualizar.");
                    }
                }else{
                    JOptionPane.showMessageDialog(rootPane, "Erro ao atualizar.");
                }
            }
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        PaginaInicial.pagInc.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(rootPane, "Apagar Cliente?") == 0){
            if(id != 0){
                try{
                    cs.executeUpdate("delete from mcoffe.cliente where id = "+id+";");  
                    txtCEP.setText("");
                    txtCPF.setText("");
                    txtNomeCliente.setText("");
                    id = 0;
                    JOptionPane.showMessageDialog(rootPane, "Deletado com sucesso!");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane, "Erro ao deletar!");
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Erro ao deletar!");
            }
        }
    }//GEN-LAST:event_btnApagarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrosClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrosClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrosClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrosClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrosClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtCEP;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtNomeCliente;
    // End of variables declaration//GEN-END:variables
}
